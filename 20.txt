#include <graphics.h>
#include <math.h>

void delay(int msec) {
    clock_t end_time = clock() + msec * CLOCKS_PER_SEC / 1000;
    while (clock() < end_time) {
        // Затримка
    }
}

int main() {
    int gd = DETECT, gm;
    double x, y;

    initgraph(&gd, &gm, "");

    for (x = 0; x < 3 * M_PI; x += 0.1) {
        y = sin(x);
        int screen_x = 100 + x * 100;
        int screen_y = 100 - y * 50;
        putpixel(screen_x, screen_y, WHITE);
        delay(50); // Затримка в мілісекундах
    }

    delay(5000); // Затримка перед закриттям вікна

    closegraph();
    return 0;
}

2

#include <graphics.h>
#include <conio.h>
#include <stdio.h>

#define ESC 27

int main() {
    int gd = DETECT, gm;
    char text[100] = "";
    char ch;
    int i = 0;

    initgraph(&gd, &gm, "");

    int font = DEFAULT_FONT;
    int size = 23;
    settextstyle(font, HORIZ_DIR, size);

    int x = 100, y = 100;

    do {
        ch = getch();

        if (ch == 13)
            break;
        else if (ch == ESC)
            return 0;
        else if (ch == 8) {
            if (i > 0) {
                i--;
                text[i] = '\0';
                outtextxy(x, y, " ");
            }
        } else {
            text[i++] = ch;
            text[i] = '\0';
            outtextxy(x, y, text);
            x += textwidth(text);
        }
    } while (1);

    closegraph();
    return 0;
}

3
#include <graphics.h>
#include <conio.h>

int main() {
    int gd = DETECT, gm;
    initgraph(&gd, &gm, "");

    int x = 0, y = 0;
    int dx = 1, dy = 1;

    while (!kbhit()) {
        cleardevice();
        circle(x, y, 20);
        x += dx;
        y += dy;
        delay(50);

        if (x <= 0 || x >= getmaxx()) {
            dx = -dx;
        }
        if (y <= 0 || y >= getmaxy()) {
            dy = -dy;
        }
    }

    closegraph();
    return 0;
}

4

#include <graphics.h>
#include <conio.h>
#include <math.h>

int main() {
    int gd = DETECT, gm;
    initgraph(&gd, &gm, "");

    int centerX = getmaxx() / 2;
    int centerY = getmaxy() / 2;
    int radius = 50;
    int angle = 0;

    while (!kbhit()) {
        cleardevice();

        int x = centerX + (int)(radius * cos(angle * M_PI / 180));
        int y = centerY - (int)(radius * sin(angle * M_PI / 180));

        circle(x, y, 10);

        angle += 5;
        if (angle >= 360)
            angle -= 360;

        delay(100);
    }

    closegraph();
    return 0;
}
